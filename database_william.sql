CREATE TABLE "users" (
  "user_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(30) NOT NULL,
  "email" varchar(45) NOT NULL,
  "password" varchar(50) NOT NULL,
  "age" int NOT NULL
);

CREATE TABLE "courses" (
  "course_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" varchar(100) NOT NULL,
  "description" varchar NOT NULL,
  "level_id" int NOT NULL,
  "category_id" int NOT NULL
);

CREATE TABLE "course_videos" (
  "video_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" varchar(50) NOT NULL,
  "url" varchar NOT NULL,
  "course_id" int NOT NULL
);

CREATE TABLE "categories" (
  "category_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(30) NOT NULL
);

CREATE TABLE "roles" (
  "role_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(30) NOT NULL
);

CREATE TABLE "course_levels" (
  "level_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(30) NOT NULL
);

CREATE TABLE "user_roles" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "role_id" int NOT NULL
);

CREATE TABLE "course_registration" (
  "registration_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "course_id" int NOT NULL,
  "role_id" int NOT NULL
);

ALTER TABLE "course_videos" ADD FOREIGN KEY ("course_id") REFERENCES "courses" ("course_id");

ALTER TABLE "courses" ADD FOREIGN KEY ("category_id") REFERENCES "categories" ("category_id");

ALTER TABLE "courses" ADD FOREIGN KEY ("level_id") REFERENCES "course_levels" ("level_id");

ALTER TABLE "user_roles" ADD FOREIGN KEY ("role_id") REFERENCES "roles" ("role_id");

ALTER TABLE "user_roles" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("user_id");

ALTER TABLE "course_registration" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("user_id");

ALTER TABLE "course_registration" ADD FOREIGN KEY ("course_id") REFERENCES "courses" ("course_id");

ALTER TABLE "course_registration" ADD FOREIGN KEY ("role_id") REFERENCES "roles" ("role_id");

INSERT INTO categories (name) VALUES ('frontend'), ('backned');
SELECT * FROM categories;

INSERT INTO course_levels (name) VALUES ('beginner'), ('intermediate'), ('advanced');
SELECT * FROM course_levels;

INSERT INTO roles (name) VALUES ('student'), ('teacher'), ('admin');
SELECT * FROM roles;

INSERT INTO users (name, email, password, age) VALUES
('teacher_juan123', 'juan1@gmail.com', '1234', 25),
('teacher_maria123', 'maria@gmail.com', '12345', 23),
('teacher_pedro123', 'pedro1@gmail.com', '123ab', 30),
('joshua123', 'joshua1@gmail.com', '123abc', 27),
('ronal123', 'ronal1@gmail.com', '1abc', 22),
('poncho123', 'poncho1@gmail.com', '12abcd', 23),
('carlos123', 'carlos1@gmail.com', '123qwe', 23),
('admin_stiven123', 'stiven1@gmail.com', '123sdf', 25);
SELECT * FROM users;

INSERT INTO courses (title, description, level_id, category_id) VALUES
('javascript', 'curso b치sico de JavaScript para principiantes', 1, 1),
('javascript', 'curso intermedio de JavaScript', 2, 1),
('node.js', 'curso avanzado de node.js para programadores', 3, 2),
('react.js', 'curso b치sico de JavaScript para principiantes', 1, 1);
SELECT * FROM courses;

INSERT INTO course_videos (course_id, title, url) VALUES
(1, 'introducci칩n a JS', 'url 1'),
(1, 'variables en JS', 'url 2'),
(2, 'promesas en JS', 'url 3'),
(2, 'patrones de dise침o', 'url 4'),
(3, 'clusters', 'url 5'),
(3, 'seguridad', 'url 6'),
(4, 'componentes y estados', 'url 7'),
(4, 'react Hook Form', 'url 8');
SELECT * FROM course_videos; 

INSERT INTO user_roles (user_id, role_id) VALUES (8, 3);
SELECT * FROM user_roles;

INSERT INTO course_registration (user_id, course_id, role_id) VALUES (1, 1, 2), (1, 3, 1), (2, 2, 2), (2, 4, 2), (3, 3, 2), (4, 1, 1), (5, 1, 1), (6, 2, 1), (7, 3, 1); 
SELECT * FROM course_registration;

ALTER TABLE roles RENAME COLUMN name TO rol;
ALTER TABLE categories RENAME COLUMN name TO category;
ALTER TABLE course_levels RENAME COLUMN name TO level;

SELECT
  users.user_id,
  users.name,
  users.email,
  course_roles.rol,
  courses.title,
  course_levels.level,
  categories.category
FROM users
JOIN course_registration ON users.user_id = course_registration.user_id
JOIN courses ON course_registration.course_id = courses.course_id
JOIN course_levels ON courses.level_id = course_levels.level_id
JOIN categories ON courses.category_id = categories.category_id
JOIN roles course_roles ON course_registration.role_id = course_roles.role_id;